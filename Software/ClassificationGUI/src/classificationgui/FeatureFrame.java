/**
 * Internal frame for a feature
 * 
 * @author Luis Suárez Lloréns
 */

package classificationgui;

import java.awt.image.BufferedImage;
import javax.swing.JFrame;
import sri.feature.ContourFeature;
import sri.feature.FeatureDBFactory;

public class FeatureFrame extends javax.swing.JInternalFrame {

    /**
     * Reference to the window that launched this internal frame.
     */
    protected JFrame parent=null;
    
    /**
     * Path of the image used to compute the feature.
     */
    protected String path;
    
    /**
     * Feature of the image asociated to the FeatureFrame.
     */
    protected ContourFeature feature;
    
//    /**
//     * Creates new form ImageFrame
//     */
//    public ImageFrame(JFrame parent, BufferedImage img) {
//        initComponents();
//        this.parent = parent;
//        this.imagePanel.setImage(img);
//    }
//    
    /**
     * Creates new form ImageFrame.
     * 
     * @param parent window that launched this internal frame
     * @param imgPath path to the image
     * @param mode mode used to calculate the feature
     */
    public FeatureFrame(JFrame parent, String imgPath, int mode) {
        initComponents();
        
        this.path = imgPath;
        this.parent = parent;
        this.imagePanel.setImage(imgPath);
        
        FeatureDBFactory factory = new FeatureDBFactory();
        
        this.feature = factory.createContourFeature(imgPath,mode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        imagePanel = new classificationgui.ImagePanel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        jScrollPane.setViewportView(imagePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private classificationgui.ImagePanel imagePanel;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables

    /**
     * Return the feature of the FeatureFrame.
     * 
     * @return ContourFeature of the frame 
     */
    ContourFeature getContourFeature() {
        return feature;
    }
}
