/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classificationgui;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.JFrame;
import sri.classification.ClassifierManager;
import sri.classification.ImageClassification;
import sri.classification.SynsetDictionary;

/**
 *
 * @author Luis Suárez Lloréns
 */
public class ClassificationFrame extends javax.swing.JInternalFrame {

    /**
    * Referencia al la ventana que ha lanzado este ventana interna
    */
    protected JFrame parent=null;
    
    /**
     * Creates new form ClassificationFrame
     */
    public ClassificationFrame(JFrame parent, String imgPath, ClassifierManager classifier) {
        initComponents();
        this.parent = parent;
        this.imagePanel.setImage(imgPath);
        
        ImageClassification classification = classifier.classifyImage(imgPath);
        ArrayList<Integer> topClasses = classification.top(5);
        ArrayList<Double> topClassesValues = new ArrayList<>();
        
        for(int classIdx:topClasses){
            topClassesValues.add(classification.get(classIdx));
        }
        
        this.classImagePanel.setGrid(false);
        this.classImagePanel.setReposition(false);
        BufferedImage classImage = createClassImage(topClassesValues);
        this.classImagePanel.setImage(classImage);
        
        SynsetDictionary dictionary = new SynsetDictionary();
        dictionary.load();
        
        this.label1.setText(dictionary.searchByIdx(topClasses.get(0)).getConcept()
                            +" - "+classification.get(topClasses.get(0)));
        this.label2.setText(dictionary.searchByIdx(topClasses.get(1)).getConcept()
                            +" - "+classification.get(topClasses.get(1)));
        this.label3.setText(dictionary.searchByIdx(topClasses.get(2)).getConcept()
                            +" - "+classification.get(topClasses.get(2)));
        this.label4.setText(dictionary.searchByIdx(topClasses.get(3)).getConcept()
                            +" - "+classification.get(topClasses.get(3)));
        this.label5.setText(dictionary.searchByIdx(topClasses.get(4)).getConcept()
                            +" - "+classification.get(topClasses.get(4)));        
    }

    private BufferedImage createClassImage(ArrayList<Double> values){
        BufferedImage result = new BufferedImage(115,115,BufferedImage.TYPE_INT_RGB);
        int it = 0;
        for(double value:values){
            Color green = new Color(0, 200, 0);
            int green_int = green.getRGB();
            if(value>0.5){
                for(int y = 0; y < 23; y++){
                    for(int x = 0; x < 115; x++){
                        result.setRGB(x, y+23*it, green_int);
                    }
                }
            }
            it +=1;
        }
        
        return result;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultsPanel = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        classImagePanel = new classificationgui.ImagePanel();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imagePanel = new classificationgui.ImagePanel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(416, 500));

        resultsPanel.setMaximumSize(new java.awt.Dimension(400, 135));
        resultsPanel.setMinimumSize(new java.awt.Dimension(400, 135));
        resultsPanel.setPreferredSize(new java.awt.Dimension(400, 135));

        label1.setText("label1");

        label2.setText("label2");

        label3.setText("label3");

        label4.setText("label4");

        label5.setText("label5");

        classImagePanel.setMaximumSize(new java.awt.Dimension(100, 95));
        classImagePanel.setMinimumSize(new java.awt.Dimension(100, 95));
        classImagePanel.setPreferredSize(new java.awt.Dimension(100, 95));

        javax.swing.GroupLayout classImagePanelLayout = new javax.swing.GroupLayout(classImagePanel);
        classImagePanel.setLayout(classImagePanelLayout);
        classImagePanelLayout.setHorizontalGroup(
            classImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        classImagePanelLayout.setVerticalGroup(
            classImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(classImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(classImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        getContentPane().add(resultsPanel, java.awt.BorderLayout.PAGE_END);

        mainPanel.setPreferredSize(new java.awt.Dimension(400, 350));
        mainPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(imagePanel);

        mainPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private classificationgui.ImagePanel classImagePanel;
    private classificationgui.ImagePanel imagePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel resultsPanel;
    // End of variables declaration//GEN-END:variables
}
