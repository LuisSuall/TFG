/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classificationgui;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import sri.ClassificationDB;
import sri.ClassifierManager;
import sri.ImageClassification;

/**
 *
 * @author Luis Suárez Lloréns
 */
public class MainWindow extends javax.swing.JFrame {
    
    private ClassifierManager classifier;
    private ClassificationDB db;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        classifier = new ClassifierManager();
    }

    /**
     * Sitúa la ventana interna <tt>vi</tt> debajo de la ventana interna activa 
     * y con el mismo tamaño.
     * 
     * @param vi la ventana interna
     */
    private void locateInternalFrame(JInternalFrame vi) {
        JInternalFrame vSel = desktopPanel.getSelectedFrame();
        if (vSel != null) {
            vi.setLocation(vSel.getX() + 20, vSel.getY() + 20);
            vi.setSize(vSel.getSize());
        }
    }
    
    /**
     * Muestra la ventana interna <tt>vi</tt> 
     * 
     * @param vi la ventana interna
     */
    private void showInternalFrame(JInternalFrame vi) {
        this.locateInternalFrame(vi);
        this.desktopPanel.add(vi);
        vi.setVisible(true);
    }  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        oneImageToolBar = new javax.swing.JToolBar();
        classifyOneImageButton = new javax.swing.JButton();
        multipleImageToolBar = new javax.swing.JToolBar();
        createDBBurron = new javax.swing.JButton();
        loadDBButton = new javax.swing.JButton();
        querryText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        desktopPanel = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        classifierMenu = new javax.swing.JMenu();
        clasificador1MenuItem = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplicación de Clasificación Automática");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("mainWindow"); // NOI18N

        buttonPanel.setPreferredSize(new java.awt.Dimension(816, 40));

        oneImageToolBar.setRollover(true);

        classifyOneImageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/analyse_img.png"))); // NOI18N
        classifyOneImageButton.setFocusable(false);
        classifyOneImageButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        classifyOneImageButton.setMaximumSize(new java.awt.Dimension(30, 30));
        classifyOneImageButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        classifyOneImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyOneImageButtonActionPerformed(evt);
            }
        });
        oneImageToolBar.add(classifyOneImageButton);

        multipleImageToolBar.setRollover(true);

        createDBBurron.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/db_create.png"))); // NOI18N
        createDBBurron.setFocusable(false);
        createDBBurron.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        createDBBurron.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        createDBBurron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDBBurronActionPerformed(evt);
            }
        });
        multipleImageToolBar.add(createDBBurron);

        loadDBButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/db_load.png"))); // NOI18N
        loadDBButton.setFocusable(false);
        loadDBButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadDBButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadDBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDBButtonActionPerformed(evt);
            }
        });
        multipleImageToolBar.add(loadDBButton);

        querryText.setMinimumSize(new java.awt.Dimension(100, 27));
        querryText.setPreferredSize(new java.awt.Dimension(300, 27));
        querryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                querryTextActionPerformed(evt);
            }
        });
        multipleImageToolBar.add(querryText);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search_db.png"))); // NOI18N
        searchButton.setFocusable(false);
        searchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        multipleImageToolBar.add(searchButton);

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addComponent(oneImageToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(multipleImageToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 223, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(oneImageToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(multipleImageToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_START);

        desktopPanel.setBackground(java.awt.Color.gray);

        javax.swing.GroupLayout desktopPanelLayout = new javax.swing.GroupLayout(desktopPanel);
        desktopPanel.setLayout(desktopPanelLayout);
        desktopPanelLayout.setHorizontalGroup(
            desktopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
        );
        desktopPanelLayout.setVerticalGroup(
            desktopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        getContentPane().add(desktopPanel, java.awt.BorderLayout.CENTER);

        classifierMenu.setText("Clasificador");

        clasificador1MenuItem.setSelected(true);
        clasificador1MenuItem.setText("Clasificador 1");
        classifierMenu.add(clasificador1MenuItem);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");
        classifierMenu.add(jRadioButtonMenuItem1);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");
        classifierMenu.add(jCheckBoxMenuItem1);

        menuBar.add(classifierMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classifyOneImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyOneImageButtonActionPerformed

        JFileChooser dlg = new JFileChooser();

        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                
                if (f != null) {
                    ClassificationFrame vi = new ClassificationFrame(this, f.getAbsolutePath(), this.classifier);
                    vi.setTitle(f.getName());
                    this.showInternalFrame(vi);
                }
            } catch (Exception ex) {
                //TODO: Salida expection
            }
        }
        
    }//GEN-LAST:event_classifyOneImageButtonActionPerformed

    private void querryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_querryTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_querryTextActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String querry = this.querryText.getText();
        
        System.out.println("Consulta: "+querry);
        
        ClassificationDB results = db.search(querry);
        
        for(ImageClassification imageClass: results){
            String path = imageClass.getImagePath();
            
            ClassificationFrame vi = new ClassificationFrame(this, path, this.classifier);
            vi.setTitle(path);
            this.showInternalFrame(vi);           
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void loadDBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDBButtonActionPerformed
        JFileChooser dlg = new JFileChooser();

        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                
                String fileName = f.getAbsolutePath();

                if(fileName.endsWith(".sridb")){
                    db = new ClassificationDB();
                    db.load(fileName);
                }
                else{
                    //TODO
                }
            } catch (Exception ex) {
                //TODO: Salida expection
            }
        }
    }//GEN-LAST:event_loadDBButtonActionPerformed

    private void createDBBurronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDBBurronActionPerformed
        JFileChooser dlg = new JFileChooser();
        dlg.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                String path = f.getAbsolutePath();
                
                ClassificationDB generatedDB = classifier.classifyFolder(path);
                db = generatedDB;

                generatedDB.save(path+"/db.sridb");

            } catch (Exception ex) {
                //TODO: Salida expection
            }
        }
    }//GEN-LAST:event_createDBBurronActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JRadioButtonMenuItem clasificador1MenuItem;
    private javax.swing.JMenu classifierMenu;
    private javax.swing.JButton classifyOneImageButton;
    private javax.swing.JButton createDBBurron;
    private javax.swing.JDesktopPane desktopPanel;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JButton loadDBButton;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JToolBar multipleImageToolBar;
    private javax.swing.JToolBar oneImageToolBar;
    private javax.swing.JTextField querryText;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
